{"version":3,"file":"static/js/37.9d7c8da6.chunk.js","mappings":"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","sources":["components/MovieDetail/MovieDetail.styled.js","components/MovieDetail/MovieDetail.js","pages/MovieReviewPage.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const MovieDetailSection = styled.section`\r\n  display: flex;\r\n  padding: 20px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const PosterContainer = styled.div`\r\n  position: relative;\r\n\r\n  img {\r\n    min-width: 322px;\r\n    border-radius: 30px;\r\n  }\r\n\r\n  div {\r\n    position: absolute;\r\n    display: flex;\r\n\r\n    top: 1rem;\r\n    right: 1rem;\r\n  }\r\n\r\n  svg {\r\n    color: #f07427;\r\n    height: 24px;\r\n    width: 24px;\r\n    margin: 0px 0 0 5px;\r\n  }\r\n  span {\r\n    display: block;\r\n    font-size: 22px;\r\n  }\r\n`;\r\n\r\nexport const MovieTitleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  max-width: 700px;\r\n\r\n  h1 {\r\n    font-size: 25px;\r\n    font-weight: 700;\r\n    margin: 0 0 0 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    margin: 0 0 0 5px;\r\n  }\r\n`;\r\n\r\nexport const Tagline = styled.blockquote`\r\n  font-style: italic;\r\n`;\r\n\r\nexport const GeneresContainer = styled.ul`\r\n  color: ${({ theme }) => theme.colors.secondaryTextColor};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0px 0px 0px -50px;\r\n\r\n  li {\r\n    font-weight: 400;\r\n    text-align: center;\r\n    font-size: 10px;\r\n    border: 1px solid #e8e8e8;\r\n    border-radius: 15px;\r\n    padding: 4px 10px;\r\n    margin: 0px 0px 0px 10px;\r\n  }\r\n`;\r\n\r\nexport const OverviewTitle = styled.p`\r\n  font-size: 18px;\r\n  margin: 25px 0 15px 0px;\r\n`;\r\n\r\nexport const OverviewContainer = styled.div`\r\n  padding: 20px;\r\n  width: 700px;\r\n`;\r\n\r\nexport const MovieOverview = styled.p`\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  margin: 0px 0px 0px 0px;\r\n`;\r\n\r\nexport const LenguagesContainer = styled.ul`\r\n  display: flex;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  & > li {\r\n    margin: 0 5px 0px 5px;\r\n  }\r\n`;\r\n\r\nexport const SmallDitielsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n  margin: 20px 0 0 0;\r\n`;\r\n\r\nexport const SmallOverviewTitle = styled.p`\r\n  font-size: 18px;\r\n  margin: 0 10px 0 0;\r\n`;\r\n\r\nexport const BackButton = styled.button`\r\n  display: block;\r\n  margin: 0 0 20px 0;\r\n  padding: 5px 15px;\r\n`;\r\n","import {\r\n  MovieTitleContainer,\r\n  PosterContainer,\r\n  MovieOverview,\r\n  GeneresContainer,\r\n  OverviewContainer,\r\n  MovieDetailSection,\r\n  LenguagesContainer,\r\n  Tagline,\r\n  SmallDitielsContainer,\r\n  SmallOverviewTitle,\r\n  BackButton,\r\n  OverviewTitle,\r\n} from './MovieDetail.styled';\r\nimport { AiFillStar } from 'react-icons/ai';\r\n\r\nexport const MovieDetail = ({ movie }) => {\r\n  return (\r\n    <MovieDetailSection>\r\n      <PosterContainer>\r\n        <div>\r\n          <AiFillStar />\r\n          <span>{Math.trunc(movie.vote_average)}</span>\r\n        </div>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n          alt=\"poster\"\r\n        />\r\n      </PosterContainer>\r\n      <OverviewContainer>\r\n        <BackButton>Back</BackButton>\r\n        <MovieTitleContainer>\r\n          <h1>{movie.title}</h1>\r\n          <p>({movie.release_date})</p>\r\n        </MovieTitleContainer>\r\n        <Tagline>{movie.tagline ? `- ${movie.tagline} -` : ``}</Tagline>\r\n        <OverviewTitle>Genres:</OverviewTitle>\r\n        <GeneresContainer>\r\n          {movie.genres.map(g => (\r\n            <li key={g.id}>{g.name}</li>\r\n          ))}\r\n        </GeneresContainer>\r\n        <OverviewTitle>Overview:</OverviewTitle>\r\n        <MovieOverview>{movie.overview}</MovieOverview>\r\n        <SmallDitielsContainer>\r\n          <SmallOverviewTitle>Runtime:</SmallOverviewTitle>\r\n          <MovieOverview>{movie.runtime} min.</MovieOverview>\r\n        </SmallDitielsContainer>\r\n        <SmallDitielsContainer>\r\n          <SmallOverviewTitle>Status:</SmallOverviewTitle>\r\n          <MovieOverview>{movie.status}</MovieOverview>\r\n        </SmallDitielsContainer>\r\n        <SmallDitielsContainer>\r\n          <SmallOverviewTitle>Languages:</SmallOverviewTitle>\r\n          <LenguagesContainer>\r\n            {movie.spoken_languages.map((g, i) => (\r\n              <li key={i}>{g.english_name}</li>\r\n            ))}\r\n          </LenguagesContainer>\r\n        </SmallDitielsContainer>\r\n        <SmallDitielsContainer>\r\n          <SmallOverviewTitle>Budget:</SmallOverviewTitle>\r\n          <MovieOverview>\r\n            {movie.budget > 0 ? movie.budget : `unknown`} USD\r\n          </MovieOverview>\r\n        </SmallDitielsContainer>\r\n        <SmallDitielsContainer>\r\n          <SmallOverviewTitle>Production Country:</SmallOverviewTitle>\r\n          <LenguagesContainer>\r\n            {movie.production_countries.map((g, i) => (\r\n              <li key={i}>{g.name}</li>\r\n            ))}\r\n          </LenguagesContainer>\r\n        </SmallDitielsContainer>\r\n      </OverviewContainer>\r\n    </MovieDetailSection>\r\n  );\r\n};\r\n","import { Loader } from \"components/Loader/Loader\";\r\nimport { MovieDetail } from \"components/MovieDetail/MovieDetail\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getMovieDetail } from \"services/api\";\r\n\r\nconst MovieReviewPage = () => {\r\n\r\n    const { movieId } = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getMovieDetail(movieId).then(setMovie)\r\n    }, [movieId]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {movie === null ? <Loader/> : <MovieDetail movie={ movie } />}   \r\n        </>\r\n    )\r\n};\r\n\r\nexport default MovieReviewPage;","import axios from \"axios\";\r\n\r\nconst API_KEY = '64d6e48eb0f228948a0484363da88192';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const getTrandingMovies = () => {\r\n    const URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\r\n    \r\n    return axios.get(URL).then(response => response.data);\r\n};\r\n\r\nexport const getUpcomingMovies = (page) => {\r\n    const URL = `${BASE_URL}/movie/upcoming?&page=${page}&api_key=${API_KEY}`;\r\n\r\n    return axios.get(URL).then(response => response.data);\r\n};\r\n\r\nexport const getMoviesByName = (name, page) => {\r\n    const URL = `${BASE_URL}/search/movie?page=${page}&query=${name}&api_key=${API_KEY}&include_adult=false`;\r\n\r\n    return axios.get(URL).then(response => response.data);\r\n};\r\n\r\nexport const getMovieDetail = (movieId) => {\r\n    const URL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\r\n\r\n    return axios.get(URL).then(response => response.data);\r\n};\r\n\r\nexport const getMovieCast = (movieId) => {\r\n    const URL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\r\n\r\n    return axios.get(URL).then(response => response.data);\r\n};\r\n\r\nexport const getMovieReviews = (movieId) => {\r\n    const URL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n    return axios.get(URL).then(response => response.data);\r\n};\r\n\r\n\r\n"],"names":["MovieDetailSection","styled","PosterContainer","MovieTitleContainer","Tagline","GeneresContainer","theme","colors","secondaryTextColor","OverviewTitle","OverviewContainer","MovieOverview","LenguagesContainer","SmallDitielsContainer","SmallOverviewTitle","BackButton","MovieDetail","movie","Math","trunc","vote_average","src","poster_path","alt","title","release_date","tagline","genres","map","g","name","id","overview","runtime","status","spoken_languages","i","english_name","budget","production_countries","movieId","useParams","useState","setMovie","useEffect","getMovieDetail","then","Loader","API_KEY","BASE_URL","getTrandingMovies","URL","axios","response","data","getUpcomingMovies","page","getMoviesByName"],"sourceRoot":""}